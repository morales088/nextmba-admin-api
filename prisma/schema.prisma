// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  name         String?
  email        String    @unique
  password     String
  profileImage String?
  role         Int
  status       Int       @default(1)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model ResetPasswordToken {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  token     String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Courses {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  description   String?
  cover_photo   String?
  course_link   String?
  price         Decimal   @db.Decimal(9, 2)
  telegram_link String?
  paid          Int       @default(1)
  is_displayed  Int       @default(1)
  status        Int       @default(1)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  Modules       Modules[]
}

model Modules {
  id            Int            @id @default(autoincrement())
  course        Courses        @relation(fields: [course_id], references: [id])
  course_id     Int
  name          String         @db.VarChar(255)
  description   String?
  zoom_link     String?
  external_link String?
  start_date    DateTime
  end_date      DateTime
  status        Int            @default(1)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
  Translations  Translations[]
}

model Speakers {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  position    String?
  company     String?
  description String?
  profile     String?

  status    Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Translations {
  id            Int     @id @default(autoincrement())
  language_code String  @db.VarChar(255)
  module        Modules @relation(fields: [module_id], references: [id])
  module_id     Int
  name          String  @db.VarChar(255)
  description   String?

  status    Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
